// Regras de segurança do Firestore para coleção de agendamentos
// Copie estas regras para o console do Firebase > Firestore > Regras, a mudança entrará em vigor rapidamente

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Function to check if user is an admin
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "administrador";
    }
    
    // Function to check if user can access admin tools
    function canAccessAdminTools() {
      let userData = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return request.auth != null && (userData.role == "administrador" || userData.cargo == "funcionário");
    }
    
    // Permitir acesso à coleção de usuários
    match /users/{userId} {
      // Permitir leitura do próprio documento, para administradores ou funcionários
      allow read: if request.auth != null && 
                   (request.auth.uid == userId || canAccessAdminTools());
      
      // Permitir escrita ao próprio usuário OU por administradores
      allow write: if request.auth != null && 
                    (request.auth.uid == userId || isAdmin());
    }
    
    // Regras para a coleção de agendamentos
    match /agendamentos/{agendamentoId} {
      // Permitir leitura se o usuário for o dono do agendamento, admin ou funcionário
      allow read: if request.auth != null && 
                   (resource.data.userId == request.auth.uid || canAccessAdminTools());
      
      // Permitir criação se o usuário estiver autenticado e definir userId corretamente
      allow create: if request.auth != null && 
                     request.resource.data.userId == request.auth.uid;
                     
      // Permitir atualização se o usuário for o dono do agendamento
      allow update: if request.auth != null && 
                     resource.data.userId == request.auth.uid;
                     
      // Permitir exclusão se o usuário for o dono do agendamento
      allow delete: if request.auth != null && 
                     resource.data.userId == request.auth.uid;
    }
    
    // Nova coleção: serviços
    match /servicos/{servicoId} {
      // Permitir leitura para usuários autenticados
      allow read: if request.auth != null;
      // Permitir escrita (criação, atualização, exclusão) somente para administradores
      allow create, update, delete: if isAdmin();
    }
    
    // Regra padrão: negar tudo que não foi explicitamente permitido
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
